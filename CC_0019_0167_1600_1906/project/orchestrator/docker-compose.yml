version: '3.1'

services:
  zoo:
    image: zookeeper
    restart: on-failure
    hostname: zoo
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181

  rmq:
    image: rabbitmq:3.8.3-alpine

#   master:
#     container_name : "master"
#     build:
#       context: .
#       dockerfile: Dockerfile
#     command: sh -c "sleep 15 && python master.py"
#     volumes:
#     - .:/code
#     links:
#     - rmq
#     - zoo
#     depends_on:
#     - rmq
#     - zoo
#     restart: on-failure

  producer:
    container_name : "producer"
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "sleep 10 && python producer.py"
    volumes:
    - .:/code
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker

    links:
    - rmq
    - zoo
    depends_on:
    - rmq
    - zoo
    restart: on-failure
    ports:
      - "80:5000"

#  consumer:
#    build:
#        context: .
#        dockerfile: Dockerfile
#    command: sh -c "sleep 15 && python consumer.py"
#    volumes:
#    - .:/code
#    links:
#    - rmq
#    - zoo
#    depends_on:
#    - rmq
#    - zoo
#   restart: on-failure

#  orchestrator:
#    build:
#        context: .
#        dockerfile: Dockerfile
#    command: sh -c "python zk_orch.py"
#    volumes:
#        - .:/code
#    depends_on:
#        - zoo
#    restart: on-failure    
  
